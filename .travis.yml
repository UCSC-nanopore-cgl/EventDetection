notifications: # set notification options
  slack:
    rooms:
      - ucsc-cgl:Edwfgt7MJEVZV9Lib3igueTF
    on_success: change
    on_failure: always
  email: false

language: generic

matrix:
  include:
    - os: linux
      compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - cmake-data
            - gcc-5
            - g++-5
            - cmake
      env: COMPILER=g++-5
# works on Precise and Trusty
   - os: linux
     compiler: gcc
     addons:
       apt:
         sources:
           - ubuntu-toolchain-r-test
         packages:
           - cmake-data
           - gcc-6
           - g++-6
           - cmake
     env:
       - MATRIX_EVAL="CC=gcc-6 && CXX=g++-6"
    - os: linux
      compiler: clang
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.6
          packages:
            - clang-3.6
      env: COMPILER=clang++-3.6

#matrix:
#  include:
#    # works on Precise and Trusty
#    - os: linux
#      addons:
#        apt:
#          sources:
#            - ubuntu-toolchain-r-test
#          packages:
#            - g++-5
#      env:
#        - MATRIX_EVAL="CC=gcc-5 && CXX=g++-5"
#
#    # works on Precise and Trusty
#    - os: linux
#      addons:
#        apt:
#          sources:
#            - ubuntu-toolchain-r-test
#          packages:
#            - g++-6
#      env:
#        - MATRIX_EVAL="CC=gcc-6 && CXX=g++-6"
#
#    # works on Precise and Trusty
#    - os: linux
#      addons:
#        apt:
#          sources:
#            - ubuntu-toolchain-r-test
#          packages:
#            - g++-7
#      env:
#        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"

before_install:
#  - eval "${MATRIX_EVAL}"
  - sudo apt-get update -qq
  - sudo apt-get install build-essential autotools-dev autoconf zlib1g-dev -y
  - sudo apt-get update

install:
  - if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then
    wget https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh -O miniconda.sh;
    else
    wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
    fi
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - conda config --set always_yes yes --set changeps1 no
  - pwd
  - python --version
  - gcc --version
  - cmake --version
  - g++ --version
#  - ln -s /usr/bin/gcc-6 /usr/local/bin/gcc
#  - ln -s /usr/bin/g++-6 /usr/local/bin/g++
#  # Export CC and CXX to tell cmake which compiler to use
#  - export CC=/usr/bin/gcc-6
#  - export CXX=/usr/bin/g++-6
#  # Check versions of gcc, g++ and cmake
#  - gcc -v && g++ -v && cmake --version
#  # Run your build commands next

#  install cmake
#  - sudo apt remove --purge --auto-remove cmake
#  - version=3.14
#  - build=2
#  - mkdir ~/temp
#  - cd ~/temp
#  - wget https://cmake.org/files/v$version/cmake-$version.$build.tar.gz
#  - tar -xzvf cmake-$version.$build.tar.gz
#  - cd cmake-$version.$build/
#  - ./bootstrap
#  - make -j4
#  - sudo make install
#  - cmake --version
##  Install boost
#  - cd $HOME/build/UCSC-nanopore-cgl/
#  - wget -O boost_1_69_0.tar.gz https://sourceforge.net/projects/boost/files/boost/1.69.0/boost_1_69_0.tar.gz/download
#  - tar xzf boost_1_69_0.tar.gz >/dev/null
#  - cd boost_1_69_0/
#  - ./bootstrap.sh --show-libraries
#  - ./bootstrap.sh --with-libraries=system,date_time,filesystem,iostreams,coroutine,context >/dev/null #--prefix=/usr/
##  - ./bootstrap.sh >/dev/null #--prefix=/usr/
#  - sudo ./b2
#  - sudo ./b2 install
#  - export CFLAGS="$CFLAGS -fPIC"
#  - export CXXFLAGS="$CXXFLAGS -fPIC"
#  #  Install HDF5
#  - cd $HOME/build/UCSC-nanopore-cgl/
#  - wget https://support.hdfgroup.org/ftp/HDF5/releases/hdf5-1.10/hdf5-1.10.4/src/hdf5-1.10.4.tar.gz
#  - tar -xzf hdf5-1.10.4.tar.gz || exit 255
#  - cd hdf5-1.10.4 && ./configure --prefix /usr/local --enable-threadsafe --disable-hl && make && sudo make install
##  - echo "LD_LIBRARY_PATH=/home/travis/build/adbailey4/hdf5-1.10.4/hdf5/lib:$LD_LIBRARY_PATH" >> ~/.bashrc
##  - source ~/.bashrc
#  - cd /home/travis/build/UCSC-nanopore-cgl/nanopore-toolkit
#  - python setup.py install

#script:
#  - python setup.py test
